1. 디지털 굿즈 컨셉: '새로미의 타임 브러쉬'
형태: 웹 기반의 인터랙티브 포스터 또는 일러스트

핵심 기능: 사용자가 마우스를 움직여(터치/드래그) 화면을 문지르면, 과거의 흑백 사진이 지워지면서 그 아래에 숨겨진 현재의 컬러 일러스트/사진이 드러나는 방식

스토리텔링: 새로미가 가진 '마법의 브러쉬'를 사용해 강서구의 과거를 닦아내고 현재의 모습을 밝혀낸다는 콘셉트

2. 구현 방법 및 특징
메인 화면: 과거의 강서구 명소 사진이나 흑백 일러스트로 시작합니다. 새로미 캐릭터가 옆에 서서 "나와 함께 강서구의 시간을 여행해 볼까?" 같은 문구를 띄워줍니다.

마법의 브러쉬: 사용자가 마우스를 가져가면 커서가 새로미 캐릭터 모양으로 변합니다. 이 커서(브러쉬)를 드래그하면 흑백 이미지가 지워지면서 아래 레이어에 있는 현재의 컬러 이미지가 나타납니다.

효과음 및 애니메이션:

브러쉬 효과음: 마우스를 움직일 때마다 '슥슥' 하는 소리가 나도록 만듭니다.

새로미 애니메이션: 사용자가 이미지를 다 지우고 나면 새로미가 '짠!' 하고 나타나거나 박수를 치는 애니메이션을 추가하여 완성도를 높여줍니다.

3. 장소별 예시 (새로미의 타임 브러쉬)
김포공항 (구 김포비행장):

과거 이미지: 과거 김포비행장의 활주로와 작은 비행기 사진

현재 이미지: 현재의 국제공항 청사와 최신 여객기 일러스트

스토리: 새로미가 브러쉬로 비행장을 닦아내고 "우와! 이렇게 멋지게 변했구나!" 같은 문구를 띄워줍니다.

마곡지구 (구 마곡 들판):

과거 이미지: 허허벌판이었던 논밭 사진

현재 이미지: LG사이언스파크, 서울식물원 등 최첨단 건물이 즐비한 풍경

스토리: 새로미가 브러쉬로 논밭을 문지르면 "짜잔! 강서의 미래 도시가 나타났어!"라고 말하며 배경이 바뀌는 연출.

리엑트로 개발

1. 프로젝트 구조 및 기술 스택
프론트엔드: React.js (Create React App 또는 Next.js 사용)

상태 관리: React Context API 또는 Redux (필요시)

애니메이션/트랜지션: CSS Transitions/Animations 또는 React Spring, Framer Motion (선택 사항)

이미지 처리: HTML Canvas API (지우개 효과 구현에 핵심)

영상 재생: HTML <video> 태그 또는 React 플레이어 라이브러리

2. 화면 구성 및 플로우
A. 첫 화면 (메인 페이지)

레이아웃:

중앙 상단에 "강서구가 어떻게 변했는지 알아봐요!!" 문구.

문구 옆 또는 아래에 활짝 웃는 새로미 캐릭터 일러스트/사진.

하단에 3x3 격자 형태의 구역 선택 패널 (총 9개의 썸네일 이미지).

구역 썸네일 예시:

양천향교 (과거/현재 믹스된 썸네일)

발산역 (과거/현재 믹스된 썸네일)

마곡 (과거/현재 믹스된 썸네일)

방화동 (과거/현재 믹스된 썸네일)

김포공항 (과거/현재 믹스된 썸네일)

Tip: 썸네일은 과거와 현재의 모습이 절반씩 섞여 있거나, 작게 아이콘으로 과거-현재 표시를 해두면 호기심을 유발할 수 있습니다.

동작: 사용자가 썸네일을 클릭하면 해당 구역의 '타임 브러쉬 게임' 화면으로 이동.

B. 타임 브러쉬 게임 화면 (개별 구역 페이지)

레이아웃:

화면 가득 채워진 과거의 흑백 사진.

사용자 마우스 커서에 따라 새로미 캐릭터가 브러쉬처럼 움직임.

동작:

사용자가 마우스를 드래그/터치하면, 브러쉬가 지나간 자리에 현재의 컬러 일러스트/사진이 점진적으로 드러남 (Canvas API 활용).

(선택 사항) 브러쉬가 지나갈 때 '슥슥' 같은 효과음 추가.

완료 감지: 일정 퍼센트(예: 80% 이상)의 과거 이미지가 지워지면 다음 단계로 자동 전환.

C. 완료 화면 (개별 구역 완료 후)

레이아웃:

지워진 후의 현재 컬러 이미지/일러스트가 화면에 완벽하게 표시됨.

화면 하단 또는 중앙에 새로미 캐릭터의 짧은 영상 (축하 또는 감탄 메시지).

영상 아래에 "다른 장소도 알아볼까?" 문구와 함께 '다음 장소로' 또는 '메인 화면으로' 버튼.

동작:

버튼 클릭 시 메인 화면으로 돌아가 다른 구역을 선택할 수 있도록 함.

(선택 사항) 완료된 구역 썸네일에 '완료' 표시 추가.

3. React 컴포넌트 구조 예시
src/
├── App.js // 메인 라우팅 및 전역 상태 관리
├── components/
│   ├── MainScreen.js // 첫 화면 (문구, 새로미, 9개 썸네일)
│   ├── LocationThumbnail.js // 각 구역 썸네일 (클릭 시 라우팅)
│   ├── TimeBrushGame.js // 타임 브러쉬 게임 화면 (Canvas, 이미지 로딩, 지우개 로직)
│   ├── CompletionScreen.js // 완료 화면 (새로미 영상, 다음 버튼)
│   └── SaeromiVideoPlayer.js // 새로미 영상 재생 컴포넌트
├── assets/
│   ├── images/ // 각 구역의 과거/현재 이미지, 썸네일 이미지
│   ├── videos/ // 새로미 영상 파일
│   └── sounds/ // 효과음 파일 (선택 사항)
├── data/
│   └── locations.js // 각 구역의 데이터 (이름, 과거/현재 이미지 경로, 영상 경로 등)
└── styles/
    └── App.css // 전역 스타일
    └── ...
4. 개발 시 고려사항 및 팁
이미지 로딩: 각 구역의 과거/현재 이미지는 용량이 클 수 있으므로, 페이지 로딩 시 최적화된 방식으로 불러오는 것이 중요합니다 (Lazy Loading 고려).

Canvas API 활용: 지우개 효과는 HTML Canvas API를 사용하여 구현합니다. 두 개의 캔버스 레이어를 겹쳐서 아래 캔버스에 현재 이미지를, 위 캔버스에 과거 이미지를 그린 후, 마우스 움직임에 따라 위 캔버스 특정 영역을 투명하게 만드는 방식입니다.

새로미 브러쉬 커서: CSS cursor 속성과 JavaScript 이벤트를 조합하여 마우스 위치에 따라 새로미 이미지가 따라다니도록 구현합니다.

데이터 관리: locations.js 파일에 각 구역의 정보를 객체 배열 형태로 저장하여 관리하면 편리합니다.